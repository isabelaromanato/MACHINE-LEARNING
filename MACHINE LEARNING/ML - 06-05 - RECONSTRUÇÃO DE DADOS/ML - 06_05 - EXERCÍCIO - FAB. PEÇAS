{"cells":[{"cell_type":"markdown","metadata":{"id":"gJbveFcJp3j_"},"source":["Isabela Victória de Novais Romanato - RM: 550234"]},{"cell_type":"markdown","metadata":{"id":"HdFoQBasp8fS"},"source":["**Instruções**\n","\n","- Exercício para ser feito em aula, até meio-dia.\n","\n","- A base de dados \"Fabricação de peças.csv\" possui missings nas colunas peças fabricadas, peças com defeito e horas de produção.\n","\n","- Reconstruir os missings utilizando outros dados da mesma base de dados.\n","\n","Dica 1: Verifique se as variáveis apresentam correlação entre si. Se uma correlação forte for encontrada (>0.7), uma regressão linear é eficaz em reproduzir a informação perdida.\n","\n","Dica 2: Desenhe 3 gráficos de dispersão entre as variáveis peças fabricadas, peças com defeito e horas de produção. Avalie se pode ser percebido, visualmente, uma correlação não-linear entre essas variáveis. Se for possível, uma regressão polinomial é a eficaz em reproduzir a informação perdida.\n","\n","Dica 3: A base de dados tem poucos registros, logo, não há necessidade de separar bases de treino e teste."]},{"cell_type":"code","execution_count":87,"metadata":{"executionInfo":{"elapsed":601,"status":"ok","timestamp":1714997256531,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"cIQUVCh8rKxQ"},"outputs":[],"source":["# IMPORTANDO BIBLIOTECAS\n","\n","import pandas as pd\n","import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LinearRegression\n","import seaborn as sns\n","import statsmodels.api as sm\n","from sklearn.preprocessing import PolynomialFeatures\n","import scipy.stats as stats"]},{"cell_type":"code","execution_count":88,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":42,"status":"ok","timestamp":1714997256532,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"bYyuASIdrF5n","outputId":"24614400-8a96-4cd2-e170-0b85ac2b006a"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Data  PecasFabricadas  PecasComDefeito  HorasProducao  \\\n","0   01/2020              NaN             31.0          114.0   \n","1   02/2020              NaN             27.0           96.0   \n","2   03/2020              NaN             43.0          105.0   \n","3   04/2020              NaN             37.0          131.0   \n","4   05/2020              NaN             17.0           95.0   \n","5   06/2020              NaN             25.0          113.0   \n","6   07/2020              NaN             40.0          115.0   \n","7   08/2020              NaN             31.0          117.0   \n","8   09/2020              NaN             33.0          127.0   \n","9   10/2020              NaN             36.0          136.0   \n","10  11/2020              NaN             29.0          101.0   \n","11  12/2020           1229.0             17.0          144.0   \n","12  01/2021           1341.0             26.0          156.0   \n","13  02/2021            717.0             35.0           76.0   \n","14  03/2021            955.0             23.0          104.0   \n","15  04/2021           1123.0             58.0          114.0   \n","16  05/2021            972.0             25.0          106.0   \n","17  06/2021            985.0             38.0          104.0   \n","18  07/2021           1128.0              6.0          128.0   \n","19  08/2021            699.0              NaN           71.0   \n","20  09/2021            794.0              NaN           87.0   \n","21  10/2021            936.0              NaN           99.0   \n","22  11/2021            880.0              NaN           97.0   \n","23  12/2021           1050.0              NaN          126.0   \n","24  01/2022           1105.0              NaN          124.0   \n","25  02/2022            878.0              NaN           90.0   \n","26  03/2022           1218.0              NaN          134.0   \n","27  04/2022           1025.0              NaN          107.0   \n","28  05/2022           1131.0              NaN          127.0   \n","29  06/2022           1122.0              NaN          120.0   \n","30  07/2022           1039.0              NaN          111.0   \n","31  08/2022           1243.0             35.0          127.0   \n","32  09/2022           1013.0             34.0          103.0   \n","33  10/2022           1325.0             37.0          149.0   \n","34  11/2022            891.0             51.0          102.0   \n","35  12/2022           1057.0             20.0            NaN   \n","36  01/2023           1223.0             36.0            NaN   \n","37  02/2023           1029.0             39.0            NaN   \n","38  03/2023            975.0             34.0            NaN   \n","39  04/2023           1136.0             37.0            NaN   \n","40  05/2023           1027.0             20.0            NaN   \n","41  06/2023            777.0             36.0            NaN   \n","42  07/2023           1015.0             28.0            NaN   \n","43  08/2023           1102.0             17.0            NaN   \n","44  09/2023           1020.0             29.0            NaN   \n","45  10/2023           1027.0             19.0            NaN   \n","46  11/2023            858.0             23.0            NaN   \n","47  12/2023           1314.0             14.0            NaN   \n","48  01/2024           1137.0             18.0            NaN   \n","49  02/2024           1075.0             39.0            NaN   \n","50  03/2024           1106.0             42.0            NaN   \n","51  04/2024            810.0             35.0            NaN   \n","\n","    CustoMaterialPorPeca  CustoHoraProducao  ProducaoFabrica1  \\\n","0                     11                 20              0.52   \n","1                     11                 20              0.31   \n","2                     10                 20              0.43   \n","3                     12                 20              0.52   \n","4                     13                 20              0.50   \n","5                     11                 20              0.64   \n","6                     12                 20              0.56   \n","7                     13                 20              0.52   \n","8                     10                 20              0.38   \n","9                     11                 20              0.48   \n","10                    13                 20              0.62   \n","11                    11                 20              0.73   \n","12                    12                 20              0.50   \n","13                    11                 20              0.59   \n","14                    12                 20              0.32   \n","15                    11                 20              0.69   \n","16                    13                 20              0.55   \n","17                    11                 20              0.36   \n","18                    13                 20              0.58   \n","19                    11                 20              0.42   \n","20                    11                 20              0.57   \n","21                    12                 20              0.55   \n","22                    10                 20              0.30   \n","23                    12                 20              0.46   \n","24                    10                 20              0.62   \n","25                    12                 20              0.43   \n","26                    10                 20              0.46   \n","27                    10                 20              0.58   \n","28                    11                 20              0.59   \n","29                    13                 20              0.53   \n","30                    13                 20              0.59   \n","31                    10                 20              0.58   \n","32                    10                 20              0.20   \n","33                    12                 20              0.58   \n","34                    11                 20              0.42   \n","35                    13                 20              0.47   \n","36                    11                 20              0.45   \n","37                    12                 20              0.47   \n","38                    11                 20              0.48   \n","39                    12                 20              0.49   \n","40                    12                 20              0.35   \n","41                    12                 20              0.78   \n","42                    12                 20              0.46   \n","43                    10                 20              0.46   \n","44                    11                 20              0.51   \n","45                    12                 20              0.41   \n","46                    12                 20              0.51   \n","47                    10                 20              0.47   \n","48                    13                 20              0.55   \n","49                    12                 20              0.27   \n","50                    13                 20              0.64   \n","51                    12                 20              0.46   \n","\n","    ProducaoFabrica2  PrecoVendaPorPeça  \n","0               0.48                 55  \n","1               0.69                 53  \n","2               0.57                 52  \n","3               0.48                 62  \n","4               0.50                 64  \n","5               0.36                 55  \n","6               0.44                 59  \n","7               0.48                 63  \n","8               0.62                 51  \n","9               0.52                 53  \n","10              0.38                 64  \n","11              0.27                 57  \n","12              0.50                 60  \n","13              0.41                 55  \n","14              0.68                 62  \n","15              0.31                 53  \n","16              0.45                 63  \n","17              0.64                 53  \n","18              0.42                 63  \n","19              0.58                 53  \n","20              0.43                 55  \n","21              0.45                 60  \n","22              0.70                 52  \n","23              0.54                 62  \n","24              0.38                 52  \n","25              0.57                 60  \n","26              0.54                 51  \n","27              0.42                 51  \n","28              0.41                 54  \n","29              0.47                 64  \n","30              0.41                 63  \n","31              0.42                 52  \n","32              0.80                 50  \n","33              0.42                 61  \n","34              0.58                 54  \n","35              0.53                 64  \n","36              0.55                 57  \n","37              0.53                 59  \n","38              0.52                 54  \n","39              0.51                 58  \n","40              0.65                 60  \n","41              0.22                 61  \n","42              0.54                 58  \n","43              0.54                 51  \n","44              0.49                 53  \n","45              0.59                 59  \n","46              0.49                 62  \n","47              0.53                 52  \n","48              0.45                 63  \n","49              0.73                 61  \n","50              0.36                 64  \n","51              0.54                 62  "],"text/html":["\n","  <div id=\"df-e734af9f-367f-40f3-b78e-d9a3e084c5c3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Data</th>\n","      <th>PecasFabricadas</th>\n","      <th>PecasComDefeito</th>\n","      <th>HorasProducao</th>\n","      <th>CustoMaterialPorPeca</th>\n","      <th>CustoHoraProducao</th>\n","      <th>ProducaoFabrica1</th>\n","      <th>ProducaoFabrica2</th>\n","      <th>PrecoVendaPorPeça</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>01/2020</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","      <td>114.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>02/2020</td>\n","      <td>NaN</td>\n","      <td>27.0</td>\n","      <td>96.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.31</td>\n","      <td>0.69</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>03/2020</td>\n","      <td>NaN</td>\n","      <td>43.0</td>\n","      <td>105.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.43</td>\n","      <td>0.57</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>04/2020</td>\n","      <td>NaN</td>\n","      <td>37.0</td>\n","      <td>131.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>05/2020</td>\n","      <td>NaN</td>\n","      <td>17.0</td>\n","      <td>95.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>06/2020</td>\n","      <td>NaN</td>\n","      <td>25.0</td>\n","      <td>113.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.64</td>\n","      <td>0.36</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>07/2020</td>\n","      <td>NaN</td>\n","      <td>40.0</td>\n","      <td>115.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.56</td>\n","      <td>0.44</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>08/2020</td>\n","      <td>NaN</td>\n","      <td>31.0</td>\n","      <td>117.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>09/2020</td>\n","      <td>NaN</td>\n","      <td>33.0</td>\n","      <td>127.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.38</td>\n","      <td>0.62</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>10/2020</td>\n","      <td>NaN</td>\n","      <td>36.0</td>\n","      <td>136.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.48</td>\n","      <td>0.52</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>11/2020</td>\n","      <td>NaN</td>\n","      <td>29.0</td>\n","      <td>101.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.62</td>\n","      <td>0.38</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>12/2020</td>\n","      <td>1229.0</td>\n","      <td>17.0</td>\n","      <td>144.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.73</td>\n","      <td>0.27</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>01/2021</td>\n","      <td>1341.0</td>\n","      <td>26.0</td>\n","      <td>156.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>02/2021</td>\n","      <td>717.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>03/2021</td>\n","      <td>955.0</td>\n","      <td>23.0</td>\n","      <td>104.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.32</td>\n","      <td>0.68</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>04/2021</td>\n","      <td>1123.0</td>\n","      <td>58.0</td>\n","      <td>114.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.69</td>\n","      <td>0.31</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>05/2021</td>\n","      <td>972.0</td>\n","      <td>25.0</td>\n","      <td>106.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>06/2021</td>\n","      <td>985.0</td>\n","      <td>38.0</td>\n","      <td>104.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.36</td>\n","      <td>0.64</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>07/2021</td>\n","      <td>1128.0</td>\n","      <td>6.0</td>\n","      <td>128.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>08/2021</td>\n","      <td>699.0</td>\n","      <td>NaN</td>\n","      <td>71.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.42</td>\n","      <td>0.58</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>09/2021</td>\n","      <td>794.0</td>\n","      <td>NaN</td>\n","      <td>87.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.57</td>\n","      <td>0.43</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>10/2021</td>\n","      <td>936.0</td>\n","      <td>NaN</td>\n","      <td>99.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>11/2021</td>\n","      <td>880.0</td>\n","      <td>NaN</td>\n","      <td>97.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.30</td>\n","      <td>0.70</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>12/2021</td>\n","      <td>1050.0</td>\n","      <td>NaN</td>\n","      <td>126.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>01/2022</td>\n","      <td>1105.0</td>\n","      <td>NaN</td>\n","      <td>124.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.62</td>\n","      <td>0.38</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>02/2022</td>\n","      <td>878.0</td>\n","      <td>NaN</td>\n","      <td>90.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.43</td>\n","      <td>0.57</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>03/2022</td>\n","      <td>1218.0</td>\n","      <td>NaN</td>\n","      <td>134.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>04/2022</td>\n","      <td>1025.0</td>\n","      <td>NaN</td>\n","      <td>107.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>05/2022</td>\n","      <td>1131.0</td>\n","      <td>NaN</td>\n","      <td>127.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>06/2022</td>\n","      <td>1122.0</td>\n","      <td>NaN</td>\n","      <td>120.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.53</td>\n","      <td>0.47</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>07/2022</td>\n","      <td>1039.0</td>\n","      <td>NaN</td>\n","      <td>111.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>08/2022</td>\n","      <td>1243.0</td>\n","      <td>35.0</td>\n","      <td>127.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>09/2022</td>\n","      <td>1013.0</td>\n","      <td>34.0</td>\n","      <td>103.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.20</td>\n","      <td>0.80</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>10/2022</td>\n","      <td>1325.0</td>\n","      <td>37.0</td>\n","      <td>149.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>11/2022</td>\n","      <td>891.0</td>\n","      <td>51.0</td>\n","      <td>102.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.42</td>\n","      <td>0.58</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>12/2022</td>\n","      <td>1057.0</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>01/2023</td>\n","      <td>1223.0</td>\n","      <td>36.0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.45</td>\n","      <td>0.55</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>02/2023</td>\n","      <td>1029.0</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>03/2023</td>\n","      <td>975.0</td>\n","      <td>34.0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.48</td>\n","      <td>0.52</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>04/2023</td>\n","      <td>1136.0</td>\n","      <td>37.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.49</td>\n","      <td>0.51</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>05/2023</td>\n","      <td>1027.0</td>\n","      <td>20.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.35</td>\n","      <td>0.65</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>06/2023</td>\n","      <td>777.0</td>\n","      <td>36.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.78</td>\n","      <td>0.22</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>07/2023</td>\n","      <td>1015.0</td>\n","      <td>28.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>08/2023</td>\n","      <td>1102.0</td>\n","      <td>17.0</td>\n","      <td>NaN</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>09/2023</td>\n","      <td>1020.0</td>\n","      <td>29.0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.51</td>\n","      <td>0.49</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>10/2023</td>\n","      <td>1027.0</td>\n","      <td>19.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.41</td>\n","      <td>0.59</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>11/2023</td>\n","      <td>858.0</td>\n","      <td>23.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.51</td>\n","      <td>0.49</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>12/2023</td>\n","      <td>1314.0</td>\n","      <td>14.0</td>\n","      <td>NaN</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>01/2024</td>\n","      <td>1137.0</td>\n","      <td>18.0</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>02/2024</td>\n","      <td>1075.0</td>\n","      <td>39.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.27</td>\n","      <td>0.73</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>03/2024</td>\n","      <td>1106.0</td>\n","      <td>42.0</td>\n","      <td>NaN</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.64</td>\n","      <td>0.36</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>04/2024</td>\n","      <td>810.0</td>\n","      <td>35.0</td>\n","      <td>NaN</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>62</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e734af9f-367f-40f3-b78e-d9a3e084c5c3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e734af9f-367f-40f3-b78e-d9a3e084c5c3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e734af9f-367f-40f3-b78e-d9a3e084c5c3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fad04f73-6f24-4f97-a3c7-bd96ef83f09d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fad04f73-6f24-4f97-a3c7-bd96ef83f09d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fad04f73-6f24-4f97-a3c7-bd96ef83f09d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_e7cf3ad3-53d0-4897-b09c-c666400348b4\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_e7cf3ad3-53d0-4897-b09c-c666400348b4 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 52,\n  \"fields\": [\n    {\n      \"column\": \"Data\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"08/2021\",\n          \"06/2023\",\n          \"12/2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PecasFabricadas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 157.5955304553787,\n        \"min\": 699.0,\n        \"max\": 1341.0,\n        \"num_unique_values\": 40,\n        \"samples\": [\n          1039.0,\n          1025.0,\n          1218.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PecasComDefeito\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.389837243610602,\n        \"min\": 6.0,\n        \"max\": 58.0,\n        \"num_unique_values\": 25,\n        \"samples\": [\n          36.0,\n          34.0,\n          31.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HorasProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.294140705048736,\n        \"min\": 71.0,\n        \"max\": 156.0,\n        \"num_unique_values\": 31,\n        \"samples\": [\n          111.0,\n          106.0,\n          90.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoMaterialPorPeca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 10,\n        \"max\": 13,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          13,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoHoraProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11342650991870398,\n        \"min\": 0.2,\n        \"max\": 0.78,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          0.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11342650991870402,\n        \"min\": 0.22,\n        \"max\": 0.8,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          0.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PrecoVendaPorPe\\u00e7a\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 50,\n        \"max\": 64,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":88}],"source":["# LER ARQUIVO.CSV\n","file = '/content/drive/MyDrive/datasets/MLDS - Fabricação de peças - Página1.csv'\n","df = pd.read_csv(file)\n","# RENOMEANDO COLUNAS\n","df.rename(columns={'Peças Fabricadas': 'PecasFabricadas', 'Peças com defeito': 'PecasComDefeito', 'Horas de produção': 'HorasProducao',\n","                   'Custo de material por peça': 'CustoMaterialPorPeca', 'Custo hora produção': 'CustoHoraProducao', 'Produção Fabrica 1': 'ProducaoFabrica1',\n","                   'Produção Fabrica 2': 'ProducaoFabrica2', 'Preço de venda por peça': 'PrecoVendaPorPeça'}, inplace=True)\n","df"]},{"cell_type":"code","execution_count":89,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":36,"status":"ok","timestamp":1714997256533,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"e84QMJWUrOZD","outputId":"e95c2e2a-ae9d-4126-df15-c54fb0000d09"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Data                     0\n","PecasFabricadas         11\n","PecasComDefeito         12\n","HorasProducao           17\n","CustoMaterialPorPeca     0\n","CustoHoraProducao        0\n","ProducaoFabrica1         0\n","ProducaoFabrica2         0\n","PrecoVendaPorPeça        0\n","dtype: int64"]},"metadata":{},"execution_count":89}],"source":["# VERIFICAR NULOS\n","df.isnull().sum()"]},{"cell_type":"code","execution_count":90,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":28,"status":"ok","timestamp":1714997256533,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"jt8pQ88pyrfk","outputId":"dd3fb8b3-b848-49ac-8109-9a8970c0f6a4"},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-90-9e3903705bd1>:2: UserWarning: Could not infer format, so each element will be parsed individually, falling back to `dateutil`. To ensure parsing is consistent and as-expected, please specify a format.\n","  df[\"Ano\"] = pd.to_datetime(df[\"Data\"]).dt.year\n"]}],"source":["# CRIAR NOVA COLUNA - ANO\n","df[\"Ano\"] = pd.to_datetime(df[\"Data\"]).dt.year"]},{"cell_type":"code","execution_count":91,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"executionInfo":{"elapsed":791,"status":"ok","timestamp":1714997257299,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"jYA5pCxo2aVY","outputId":"e1c0aea9-714c-4b19-ea66-f0bc9127a69e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                      PecasFabricadas  PecasComDefeito  HorasProducao  \\\n","PecasFabricadas              1.000000        -0.196910       0.969278   \n","PecasComDefeito             -0.196910         1.000000      -0.131069   \n","HorasProducao                0.969278        -0.131069       1.000000   \n","CustoMaterialPorPeca        -0.047546        -0.233748       0.028114   \n","CustoHoraProducao                 NaN              NaN            NaN   \n","ProducaoFabrica1             0.130479         0.033599       0.298652   \n","ProducaoFabrica2            -0.130479        -0.033599      -0.298652   \n","PrecoVendaPorPeça           -0.014646        -0.266933       0.113399   \n","Ano                          0.076910        -0.012925       0.024162   \n","\n","                      CustoMaterialPorPeca  CustoHoraProducao  \\\n","PecasFabricadas                  -0.047546                NaN   \n","PecasComDefeito                  -0.233748                NaN   \n","HorasProducao                     0.028114                NaN   \n","CustoMaterialPorPeca              1.000000                NaN   \n","CustoHoraProducao                      NaN                NaN   \n","ProducaoFabrica1                  0.218237                NaN   \n","ProducaoFabrica2                 -0.218237                NaN   \n","PrecoVendaPorPeça                 0.955870                NaN   \n","Ano                               0.095076                NaN   \n","\n","                      ProducaoFabrica1  ProducaoFabrica2  PrecoVendaPorPeça  \\\n","PecasFabricadas               0.130479         -0.130479          -0.014646   \n","PecasComDefeito               0.033599         -0.033599          -0.266933   \n","HorasProducao                 0.298652         -0.298652           0.113399   \n","CustoMaterialPorPeca          0.218237         -0.218237           0.955870   \n","CustoHoraProducao                  NaN               NaN                NaN   \n","ProducaoFabrica1              1.000000         -1.000000           0.221185   \n","ProducaoFabrica2             -1.000000          1.000000          -0.221185   \n","PrecoVendaPorPeça             0.221185         -0.221185           1.000000   \n","Ano                          -0.089081          0.089081           0.121767   \n","\n","                           Ano  \n","PecasFabricadas       0.076910  \n","PecasComDefeito      -0.012925  \n","HorasProducao         0.024162  \n","CustoMaterialPorPeca  0.095076  \n","CustoHoraProducao          NaN  \n","ProducaoFabrica1     -0.089081  \n","ProducaoFabrica2      0.089081  \n","PrecoVendaPorPeça     0.121767  \n","Ano                   1.000000  "],"text/html":["\n","  <div id=\"df-fc89397e-e303-473d-a7e3-9cc8de55a4fe\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PecasFabricadas</th>\n","      <th>PecasComDefeito</th>\n","      <th>HorasProducao</th>\n","      <th>CustoMaterialPorPeca</th>\n","      <th>CustoHoraProducao</th>\n","      <th>ProducaoFabrica1</th>\n","      <th>ProducaoFabrica2</th>\n","      <th>PrecoVendaPorPeça</th>\n","      <th>Ano</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>PecasFabricadas</th>\n","      <td>1.000000</td>\n","      <td>-0.196910</td>\n","      <td>0.969278</td>\n","      <td>-0.047546</td>\n","      <td>NaN</td>\n","      <td>0.130479</td>\n","      <td>-0.130479</td>\n","      <td>-0.014646</td>\n","      <td>0.076910</td>\n","    </tr>\n","    <tr>\n","      <th>PecasComDefeito</th>\n","      <td>-0.196910</td>\n","      <td>1.000000</td>\n","      <td>-0.131069</td>\n","      <td>-0.233748</td>\n","      <td>NaN</td>\n","      <td>0.033599</td>\n","      <td>-0.033599</td>\n","      <td>-0.266933</td>\n","      <td>-0.012925</td>\n","    </tr>\n","    <tr>\n","      <th>HorasProducao</th>\n","      <td>0.969278</td>\n","      <td>-0.131069</td>\n","      <td>1.000000</td>\n","      <td>0.028114</td>\n","      <td>NaN</td>\n","      <td>0.298652</td>\n","      <td>-0.298652</td>\n","      <td>0.113399</td>\n","      <td>0.024162</td>\n","    </tr>\n","    <tr>\n","      <th>CustoMaterialPorPeca</th>\n","      <td>-0.047546</td>\n","      <td>-0.233748</td>\n","      <td>0.028114</td>\n","      <td>1.000000</td>\n","      <td>NaN</td>\n","      <td>0.218237</td>\n","      <td>-0.218237</td>\n","      <td>0.955870</td>\n","      <td>0.095076</td>\n","    </tr>\n","    <tr>\n","      <th>CustoHoraProducao</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>ProducaoFabrica1</th>\n","      <td>0.130479</td>\n","      <td>0.033599</td>\n","      <td>0.298652</td>\n","      <td>0.218237</td>\n","      <td>NaN</td>\n","      <td>1.000000</td>\n","      <td>-1.000000</td>\n","      <td>0.221185</td>\n","      <td>-0.089081</td>\n","    </tr>\n","    <tr>\n","      <th>ProducaoFabrica2</th>\n","      <td>-0.130479</td>\n","      <td>-0.033599</td>\n","      <td>-0.298652</td>\n","      <td>-0.218237</td>\n","      <td>NaN</td>\n","      <td>-1.000000</td>\n","      <td>1.000000</td>\n","      <td>-0.221185</td>\n","      <td>0.089081</td>\n","    </tr>\n","    <tr>\n","      <th>PrecoVendaPorPeça</th>\n","      <td>-0.014646</td>\n","      <td>-0.266933</td>\n","      <td>0.113399</td>\n","      <td>0.955870</td>\n","      <td>NaN</td>\n","      <td>0.221185</td>\n","      <td>-0.221185</td>\n","      <td>1.000000</td>\n","      <td>0.121767</td>\n","    </tr>\n","    <tr>\n","      <th>Ano</th>\n","      <td>0.076910</td>\n","      <td>-0.012925</td>\n","      <td>0.024162</td>\n","      <td>0.095076</td>\n","      <td>NaN</td>\n","      <td>-0.089081</td>\n","      <td>0.089081</td>\n","      <td>0.121767</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc89397e-e303-473d-a7e3-9cc8de55a4fe')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc89397e-e303-473d-a7e3-9cc8de55a4fe button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc89397e-e303-473d-a7e3-9cc8de55a4fe');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-bceee870-9574-4804-8910-379a5e872e9b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bceee870-9574-4804-8910-379a5e872e9b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-bceee870-9574-4804-8910-379a5e872e9b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_c345d24a-6921-4909-9766-3152c8899448\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('matriz_corr')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_c345d24a-6921-4909-9766-3152c8899448 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('matriz_corr');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"matriz_corr","summary":"{\n  \"name\": \"matriz_corr\",\n  \"rows\": 9,\n  \"fields\": [\n    {\n      \"column\": \"PecasFabricadas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4812934900230008,\n        \"min\": -0.19691020426929148,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.19691020426929148,\n          -0.1304791370651937,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PecasComDefeito\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4107713554144071,\n        \"min\": -0.2669325234750863,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1.0,\n          -0.03359945058846448,\n          -0.19691020426929148\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HorasProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.48511470426147707,\n        \"min\": -0.2986520296575405,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.13106870955450653,\n          -0.2986520296575405,\n          0.9692778948290924\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoMaterialPorPeca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4886826983383072,\n        \"min\": -0.2337480401150859,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          -0.2337480401150859,\n          -0.2182372593922631,\n          -0.047546042135516164\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoHoraProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5515169436619142,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5515169436619142,\n        \"min\": -1.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PrecoVendaPorPe\\u00e7a\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.48622943044098443,\n        \"min\": -0.2669325234750863,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Ano\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.345073198295304,\n        \"min\": -0.08908055282019114,\n        \"max\": 1.0,\n        \"num_unique_values\": 8,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":91}],"source":["# MATRIZ DE CORRELAÇÃO EXCLUINDO A COLUNA Data E USANDO Ano\n","\n","df2 = df.drop(columns=[\"Data\"])\n","matriz_corr = df2.corr()\n","matriz_corr\n","\n","# Não surgiu tanto efeito em relação a outras variáveis, sendo assim não utilizaremos Data e Ano\n"]},{"cell_type":"code","execution_count":92,"metadata":{"executionInfo":{"elapsed":37,"status":"ok","timestamp":1714997257301,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"nGS1O8s-42M3"},"outputs":[],"source":["# DROP NAS COLUNAS QUE NÃO SERÃO UTILIZADAS\n","df.drop(columns=[\"Ano\", \"Data\"], inplace=True)"]},{"cell_type":"code","execution_count":93,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":425},"executionInfo":{"elapsed":37,"status":"ok","timestamp":1714997257303,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"yDyqDvBa3urb","outputId":"ad065621-b8f0-4d1f-ef40-c501e9585afa"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PecasFabricadas  PecasComDefeito  HorasProducao  CustoMaterialPorPeca  \\\n","11           1229.0             17.0          144.0                    11   \n","12           1341.0             26.0          156.0                    12   \n","13            717.0             35.0           76.0                    11   \n","14            955.0             23.0          104.0                    12   \n","15           1123.0             58.0          114.0                    11   \n","16            972.0             25.0          106.0                    13   \n","17            985.0             38.0          104.0                    11   \n","18           1128.0              6.0          128.0                    13   \n","31           1243.0             35.0          127.0                    10   \n","32           1013.0             34.0          103.0                    10   \n","33           1325.0             37.0          149.0                    12   \n","34            891.0             51.0          102.0                    11   \n","\n","    CustoHoraProducao  ProducaoFabrica1  ProducaoFabrica2  PrecoVendaPorPeça  \n","11                 20              0.73              0.27                 57  \n","12                 20              0.50              0.50                 60  \n","13                 20              0.59              0.41                 55  \n","14                 20              0.32              0.68                 62  \n","15                 20              0.69              0.31                 53  \n","16                 20              0.55              0.45                 63  \n","17                 20              0.36              0.64                 53  \n","18                 20              0.58              0.42                 63  \n","31                 20              0.58              0.42                 52  \n","32                 20              0.20              0.80                 50  \n","33                 20              0.58              0.42                 61  \n","34                 20              0.42              0.58                 54  "],"text/html":["\n","  <div id=\"df-d7c22017-7213-43f5-880b-be3fef4ec3fd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PecasFabricadas</th>\n","      <th>PecasComDefeito</th>\n","      <th>HorasProducao</th>\n","      <th>CustoMaterialPorPeca</th>\n","      <th>CustoHoraProducao</th>\n","      <th>ProducaoFabrica1</th>\n","      <th>ProducaoFabrica2</th>\n","      <th>PrecoVendaPorPeça</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>11</th>\n","      <td>1229.0</td>\n","      <td>17.0</td>\n","      <td>144.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.73</td>\n","      <td>0.27</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1341.0</td>\n","      <td>26.0</td>\n","      <td>156.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>717.0</td>\n","      <td>35.0</td>\n","      <td>76.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>955.0</td>\n","      <td>23.0</td>\n","      <td>104.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.32</td>\n","      <td>0.68</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1123.0</td>\n","      <td>58.0</td>\n","      <td>114.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.69</td>\n","      <td>0.31</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>972.0</td>\n","      <td>25.0</td>\n","      <td>106.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>985.0</td>\n","      <td>38.0</td>\n","      <td>104.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.36</td>\n","      <td>0.64</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1128.0</td>\n","      <td>6.0</td>\n","      <td>128.0</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>1243.0</td>\n","      <td>35.0</td>\n","      <td>127.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>1013.0</td>\n","      <td>34.0</td>\n","      <td>103.0</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.20</td>\n","      <td>0.80</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>1325.0</td>\n","      <td>37.0</td>\n","      <td>149.0</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>891.0</td>\n","      <td>51.0</td>\n","      <td>102.0</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.42</td>\n","      <td>0.58</td>\n","      <td>54</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7c22017-7213-43f5-880b-be3fef4ec3fd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7c22017-7213-43f5-880b-be3fef4ec3fd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7c22017-7213-43f5-880b-be3fef4ec3fd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-de9bf6b2-420a-4587-b4e3-cf2942247734\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-de9bf6b2-420a-4587-b4e3-cf2942247734')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-de9bf6b2-420a-4587-b4e3-cf2942247734 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_f1c4d5ce-695f-419e-b2bf-76843c62d899\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_filtered')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_f1c4d5ce-695f-419e-b2bf-76843c62d899 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_filtered');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_filtered","summary":"{\n  \"name\": \"df_filtered\",\n  \"rows\": 12,\n  \"fields\": [\n    {\n      \"column\": \"PecasFabricadas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 188.11062187076536,\n        \"min\": 717.0,\n        \"max\": 1341.0,\n        \"num_unique_values\": 12,\n        \"samples\": [\n          1325.0,\n          1013.0,\n          1229.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PecasComDefeito\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.100021491494473,\n        \"min\": 6.0,\n        \"max\": 58.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          25.0,\n          17.0,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HorasProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.46806340540267,\n        \"min\": 76.0,\n        \"max\": 156.0,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          106.0,\n          144.0,\n          149.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoMaterialPorPeca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 10,\n        \"max\": 13,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12,\n          10,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoHoraProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15561218305502791,\n        \"min\": 0.2,\n        \"max\": 0.73,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.15561218305502791,\n        \"min\": 0.27,\n        \"max\": 0.8,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          0.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PrecoVendaPorPe\\u00e7a\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 50,\n        \"max\": 63,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          61\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":93}],"source":["# FILTRAR\n","df1 = df\n","df_filtered = df1.query('PecasFabricadas.notnull() and PecasComDefeito.notnull() and HorasProducao.notnull()')\n","df_filtered"]},{"cell_type":"code","execution_count":94,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":572},"executionInfo":{"elapsed":34,"status":"ok","timestamp":1714997257304,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"IB_OaDen4zdK","outputId":"7d53c59b-c76e-4fec-c595-87be2919a4fc"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# GRÁFICO DE CORRELAÇÃO\n","\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","corr = df_filtered.corr()\n","\n","sns.heatmap(corr, annot=True)\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"KZj_l-YB70zG"},"source":[" Verifique se as variáveis apresentam correlação entre si. Se uma correlação forte for encontrada (>0.7), uma regressão linear é eficaz em reproduzir a informação perdida.\n","\n","\n"," - Não obtivemos correlação suficiente entre as variáveis para utilizar a Regressão Linear."]},{"cell_type":"code","execution_count":95,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":268},"executionInfo":{"elapsed":466,"status":"ok","timestamp":1714997257742,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"VuUxsmaX8G06","outputId":"7baa69ac-88ec-4361-9857-de398a31bef2"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x250 with 2 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# GRÁFICO DE DISPERSÃO ENTRE AS VARIÁVIES: peças fabricadas, peças com defeito e horas de produção.\n","\n","import matplotlib.pyplot as plt\n","sns.pairplot(df_filtered, x_vars=[\"PecasFabricadas\", \"PecasComDefeito\"], y_vars=[\"HorasProducao\"], kind=\"scatter\")\n","plt.show()\n"]},{"cell_type":"code","execution_count":96,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":451},"executionInfo":{"elapsed":525,"status":"ok","timestamp":1714997258256,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"IV8SoW0-t_Gb","outputId":"5fdc6d08-6827-4803-d059-39bf1917d9fd"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["# GRÁFICO DE DISPERSÃO ENTRE AS VARIÁVIES: peças fabricadas e peças com defeito.\n","\n","sns.scatterplot(data=df_filtered, x=\"PecasFabricadas\", y=\"PecasComDefeito\")\n","plt.show()\n"]},{"cell_type":"markdown","metadata":{"id":"U25J0VSB9fjm"},"source":["Avalie se pode ser percebido, visualmente, uma correlação não-linear entre essas variáveis. Se for possível, uma regressão polinomial é a eficaz em reproduzir a informação perdida.\n","\n","- Foi possível perceber visualmente uma correlação não-linear entre as variáveis por issp, utilizaremos Regressão Polinomial para reproduzir a informação perdida.\n"]},{"cell_type":"code","execution_count":97,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"elapsed":38,"status":"ok","timestamp":1714997258257,"user":{"displayName":"Isabela Victoria","userId":"10947860312804801877"},"user_tz":180},"id":"sqIZ6c0ZH986","outputId":"503a80d3-6cae-4cb1-d3a7-a2261f1ee829"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["    PecasFabricadas  PecasComDefeito  HorasProducao  CustoMaterialPorPeca  \\\n","0       1072.775786        31.000000     114.000000                    11   \n","1        916.941630        27.000000      96.000000                    11   \n","2        992.228126        43.000000     105.000000                    10   \n","3       1222.373439        37.000000     131.000000                    12   \n","4        920.293300        17.000000      95.000000                    13   \n","5       1059.630378        25.000000     113.000000                    11   \n","6       1089.616546        40.000000     115.000000                    12   \n","7       1097.526145        31.000000     117.000000                    13   \n","8       1180.625471        33.000000     127.000000                    10   \n","9       1257.960008        36.000000     136.000000                    11   \n","10       960.102721        29.000000     101.000000                    13   \n","11      1229.000000        17.000000     144.000000                    11   \n","12      1341.000000        26.000000     156.000000                    12   \n","13       717.000000        35.000000      76.000000                    11   \n","14       955.000000        23.000000     104.000000                    12   \n","15      1123.000000        58.000000     114.000000                    11   \n","16       972.000000        25.000000     106.000000                    13   \n","17       985.000000        38.000000     104.000000                    11   \n","18      1128.000000         6.000000     128.000000                    13   \n","19       699.000000        42.808351      71.000000                    11   \n","20       794.000000        37.347126      87.000000                    11   \n","21       936.000000        30.856934      99.000000                    12   \n","22       880.000000        32.109518      97.000000                    10   \n","23      1050.000000        30.972351     126.000000                    12   \n","24      1105.000000        24.372133     124.000000                    10   \n","25       878.000000        34.553996      90.000000                    12   \n","26      1218.000000        26.652233     134.000000                    10   \n","27      1025.000000        31.842490     107.000000                    10   \n","28      1131.000000        24.038007     127.000000                    11   \n","29      1122.000000        29.393159     120.000000                    13   \n","30      1039.000000        28.781130     111.000000                    13   \n","31      1243.000000        35.000000     127.000000                    10   \n","32      1013.000000        34.000000     103.000000                    10   \n","33      1325.000000        37.000000     149.000000                    12   \n","34       891.000000        51.000000     102.000000                    11   \n","35      1057.000000        20.000000     114.377874                    13   \n","36      1223.000000        36.000000     131.654701                    11   \n","37      1029.000000        39.000000     108.684302                    12   \n","38       975.000000        34.000000     102.983077                    11   \n","39      1136.000000        37.000000     120.701589                    12   \n","40      1027.000000        20.000000     110.002090                    12   \n","41       777.000000        36.000000      84.340954                    12   \n","42      1015.000000        28.000000     107.669857                    12   \n","43      1102.000000        17.000000     121.976321                    10   \n","44      1020.000000        29.000000     108.229667                    11   \n","45      1027.000000        19.000000     110.123059                    12   \n","46       858.000000        23.000000      87.689243                    12   \n","47      1314.000000        14.000000     159.889565                    10   \n","48      1137.000000        18.000000     127.188971                    13   \n","49      1075.000000        39.000000     113.472898                    12   \n","50      1106.000000        42.000000     116.171461                    13   \n","51       810.000000        35.000000      86.787023                    12   \n","\n","    CustoHoraProducao  ProducaoFabrica1  ProducaoFabrica2  PrecoVendaPorPeça  \n","0                  20              0.52              0.48                 55  \n","1                  20              0.31              0.69                 53  \n","2                  20              0.43              0.57                 52  \n","3                  20              0.52              0.48                 62  \n","4                  20              0.50              0.50                 64  \n","5                  20              0.64              0.36                 55  \n","6                  20              0.56              0.44                 59  \n","7                  20              0.52              0.48                 63  \n","8                  20              0.38              0.62                 51  \n","9                  20              0.48              0.52                 53  \n","10                 20              0.62              0.38                 64  \n","11                 20              0.73              0.27                 57  \n","12                 20              0.50              0.50                 60  \n","13                 20              0.59              0.41                 55  \n","14                 20              0.32              0.68                 62  \n","15                 20              0.69              0.31                 53  \n","16                 20              0.55              0.45                 63  \n","17                 20              0.36              0.64                 53  \n","18                 20              0.58              0.42                 63  \n","19                 20              0.42              0.58                 53  \n","20                 20              0.57              0.43                 55  \n","21                 20              0.55              0.45                 60  \n","22                 20              0.30              0.70                 52  \n","23                 20              0.46              0.54                 62  \n","24                 20              0.62              0.38                 52  \n","25                 20              0.43              0.57                 60  \n","26                 20              0.46              0.54                 51  \n","27                 20              0.58              0.42                 51  \n","28                 20              0.59              0.41                 54  \n","29                 20              0.53              0.47                 64  \n","30                 20              0.59              0.41                 63  \n","31                 20              0.58              0.42                 52  \n","32                 20              0.20              0.80                 50  \n","33                 20              0.58              0.42                 61  \n","34                 20              0.42              0.58                 54  \n","35                 20              0.47              0.53                 64  \n","36                 20              0.45              0.55                 57  \n","37                 20              0.47              0.53                 59  \n","38                 20              0.48              0.52                 54  \n","39                 20              0.49              0.51                 58  \n","40                 20              0.35              0.65                 60  \n","41                 20              0.78              0.22                 61  \n","42                 20              0.46              0.54                 58  \n","43                 20              0.46              0.54                 51  \n","44                 20              0.51              0.49                 53  \n","45                 20              0.41              0.59                 59  \n","46                 20              0.51              0.49                 62  \n","47                 20              0.47              0.53                 52  \n","48                 20              0.55              0.45                 63  \n","49                 20              0.27              0.73                 61  \n","50                 20              0.64              0.36                 64  \n","51                 20              0.46              0.54                 62  "],"text/html":["\n","  <div id=\"df-ed4e2d13-e4e7-4607-b46e-fbac5424484e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PecasFabricadas</th>\n","      <th>PecasComDefeito</th>\n","      <th>HorasProducao</th>\n","      <th>CustoMaterialPorPeca</th>\n","      <th>CustoHoraProducao</th>\n","      <th>ProducaoFabrica1</th>\n","      <th>ProducaoFabrica2</th>\n","      <th>PrecoVendaPorPeça</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1072.775786</td>\n","      <td>31.000000</td>\n","      <td>114.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>916.941630</td>\n","      <td>27.000000</td>\n","      <td>96.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.31</td>\n","      <td>0.69</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>992.228126</td>\n","      <td>43.000000</td>\n","      <td>105.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.43</td>\n","      <td>0.57</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1222.373439</td>\n","      <td>37.000000</td>\n","      <td>131.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>920.293300</td>\n","      <td>17.000000</td>\n","      <td>95.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>1059.630378</td>\n","      <td>25.000000</td>\n","      <td>113.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.64</td>\n","      <td>0.36</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>1089.616546</td>\n","      <td>40.000000</td>\n","      <td>115.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.56</td>\n","      <td>0.44</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>1097.526145</td>\n","      <td>31.000000</td>\n","      <td>117.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.52</td>\n","      <td>0.48</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>1180.625471</td>\n","      <td>33.000000</td>\n","      <td>127.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.38</td>\n","      <td>0.62</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>1257.960008</td>\n","      <td>36.000000</td>\n","      <td>136.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.48</td>\n","      <td>0.52</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>960.102721</td>\n","      <td>29.000000</td>\n","      <td>101.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.62</td>\n","      <td>0.38</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>1229.000000</td>\n","      <td>17.000000</td>\n","      <td>144.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.73</td>\n","      <td>0.27</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>1341.000000</td>\n","      <td>26.000000</td>\n","      <td>156.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.50</td>\n","      <td>0.50</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>717.000000</td>\n","      <td>35.000000</td>\n","      <td>76.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>955.000000</td>\n","      <td>23.000000</td>\n","      <td>104.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.32</td>\n","      <td>0.68</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>1123.000000</td>\n","      <td>58.000000</td>\n","      <td>114.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.69</td>\n","      <td>0.31</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>972.000000</td>\n","      <td>25.000000</td>\n","      <td>106.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>985.000000</td>\n","      <td>38.000000</td>\n","      <td>104.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.36</td>\n","      <td>0.64</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>1128.000000</td>\n","      <td>6.000000</td>\n","      <td>128.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>699.000000</td>\n","      <td>42.808351</td>\n","      <td>71.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.42</td>\n","      <td>0.58</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>794.000000</td>\n","      <td>37.347126</td>\n","      <td>87.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.57</td>\n","      <td>0.43</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>936.000000</td>\n","      <td>30.856934</td>\n","      <td>99.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>880.000000</td>\n","      <td>32.109518</td>\n","      <td>97.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.30</td>\n","      <td>0.70</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>1050.000000</td>\n","      <td>30.972351</td>\n","      <td>126.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>1105.000000</td>\n","      <td>24.372133</td>\n","      <td>124.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.62</td>\n","      <td>0.38</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>878.000000</td>\n","      <td>34.553996</td>\n","      <td>90.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.43</td>\n","      <td>0.57</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>1218.000000</td>\n","      <td>26.652233</td>\n","      <td>134.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>1025.000000</td>\n","      <td>31.842490</td>\n","      <td>107.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>1131.000000</td>\n","      <td>24.038007</td>\n","      <td>127.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>1122.000000</td>\n","      <td>29.393159</td>\n","      <td>120.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.53</td>\n","      <td>0.47</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>1039.000000</td>\n","      <td>28.781130</td>\n","      <td>111.000000</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.59</td>\n","      <td>0.41</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>1243.000000</td>\n","      <td>35.000000</td>\n","      <td>127.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>1013.000000</td>\n","      <td>34.000000</td>\n","      <td>103.000000</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.20</td>\n","      <td>0.80</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>1325.000000</td>\n","      <td>37.000000</td>\n","      <td>149.000000</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.58</td>\n","      <td>0.42</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>891.000000</td>\n","      <td>51.000000</td>\n","      <td>102.000000</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.42</td>\n","      <td>0.58</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>1057.000000</td>\n","      <td>20.000000</td>\n","      <td>114.377874</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>1223.000000</td>\n","      <td>36.000000</td>\n","      <td>131.654701</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.45</td>\n","      <td>0.55</td>\n","      <td>57</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>1029.000000</td>\n","      <td>39.000000</td>\n","      <td>108.684302</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>975.000000</td>\n","      <td>34.000000</td>\n","      <td>102.983077</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.48</td>\n","      <td>0.52</td>\n","      <td>54</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>1136.000000</td>\n","      <td>37.000000</td>\n","      <td>120.701589</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.49</td>\n","      <td>0.51</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>1027.000000</td>\n","      <td>20.000000</td>\n","      <td>110.002090</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.35</td>\n","      <td>0.65</td>\n","      <td>60</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>777.000000</td>\n","      <td>36.000000</td>\n","      <td>84.340954</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.78</td>\n","      <td>0.22</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>1015.000000</td>\n","      <td>28.000000</td>\n","      <td>107.669857</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>1102.000000</td>\n","      <td>17.000000</td>\n","      <td>121.976321</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>1020.000000</td>\n","      <td>29.000000</td>\n","      <td>108.229667</td>\n","      <td>11</td>\n","      <td>20</td>\n","      <td>0.51</td>\n","      <td>0.49</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>1027.000000</td>\n","      <td>19.000000</td>\n","      <td>110.123059</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.41</td>\n","      <td>0.59</td>\n","      <td>59</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>858.000000</td>\n","      <td>23.000000</td>\n","      <td>87.689243</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.51</td>\n","      <td>0.49</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>1314.000000</td>\n","      <td>14.000000</td>\n","      <td>159.889565</td>\n","      <td>10</td>\n","      <td>20</td>\n","      <td>0.47</td>\n","      <td>0.53</td>\n","      <td>52</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>1137.000000</td>\n","      <td>18.000000</td>\n","      <td>127.188971</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.55</td>\n","      <td>0.45</td>\n","      <td>63</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>1075.000000</td>\n","      <td>39.000000</td>\n","      <td>113.472898</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.27</td>\n","      <td>0.73</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>1106.000000</td>\n","      <td>42.000000</td>\n","      <td>116.171461</td>\n","      <td>13</td>\n","      <td>20</td>\n","      <td>0.64</td>\n","      <td>0.36</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>810.000000</td>\n","      <td>35.000000</td>\n","      <td>86.787023</td>\n","      <td>12</td>\n","      <td>20</td>\n","      <td>0.46</td>\n","      <td>0.54</td>\n","      <td>62</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ed4e2d13-e4e7-4607-b46e-fbac5424484e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ed4e2d13-e4e7-4607-b46e-fbac5424484e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ed4e2d13-e4e7-4607-b46e-fbac5424484e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3b9ea8d2-ee92-450b-bc75-30116dddcb61\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3b9ea8d2-ee92-450b-bc75-30116dddcb61')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3b9ea8d2-ee92-450b-bc75-30116dddcb61 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_355c707f-c995-471d-a439-1037cf198e02\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_355c707f-c995-471d-a439-1037cf198e02 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 52,\n  \"fields\": [\n    {\n      \"column\": \"PecasFabricadas\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 149.4652969398545,\n        \"min\": 699.0,\n        \"max\": 1341.0,\n        \"num_unique_values\": 51,\n        \"samples\": [\n          1102.0,\n          1027.0,\n          1314.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PecasComDefeito\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.4211917632527,\n        \"min\": 6.0,\n        \"max\": 58.0,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          37.347126348207524,\n          58.0,\n          17.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"HorasProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.730423501737324,\n        \"min\": 71.0,\n        \"max\": 159.88956458980084,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          111.0,\n          108.22966712728521,\n          120.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoMaterialPorPeca\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 10,\n        \"max\": 13,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          13,\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"CustoHoraProducao\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 20,\n        \"max\": 20,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11342650991870398,\n        \"min\": 0.2,\n        \"max\": 0.78,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          0.51\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ProducaoFabrica2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11342650991870402,\n        \"min\": 0.22,\n        \"max\": 0.8,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          0.49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"PrecoVendaPorPe\\u00e7a\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4,\n        \"min\": 50,\n        \"max\": 64,\n        \"num_unique_values\": 14,\n        \"samples\": [\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":97}],"source":["# Regressão polinomial para reproduzir a informação perdida nas colunas do df: PecasFabricadas, PecasComDefeito e HorasProducao\n","\n","# REGRESSÃO POLINOMIAL\n","\n","# PecasFabricadas\n","\n","poly_features = PolynomialFeatures(degree=2)\n","\n","X = df_filtered[[\"PecasComDefeito\", \"HorasProducao\"]]\n","X_poly = poly_features.fit_transform(X)\n","\n","y = df_filtered[\"PecasFabricadas\"]\n","\n","model = LinearRegression()\n","model.fit(X_poly, y)\n","\n","missing_indices = df[df[\"PecasFabricadas\"].isnull()].index\n","X_missing = df.loc[missing_indices, [\"PecasComDefeito\", \"HorasProducao\"]]\n","X_missing_poly = poly_features.transform(X_missing)\n","predicted_values = model.predict(X_missing_poly)\n","\n","df.loc[missing_indices, \"PecasFabricadas\"] = predicted_values\n","\n","# PecasComDefeito\n","\n","poly_features = PolynomialFeatures(degree=2)\n","\n","X = df_filtered[[\"PecasFabricadas\", \"HorasProducao\"]]\n","X_poly = poly_features.fit_transform(X)\n","\n","y = df_filtered[\"PecasComDefeito\"]\n","\n","model = LinearRegression()\n","model.fit(X_poly, y)\n","\n","missing_indices = df[df[\"PecasComDefeito\"].isnull()].index\n","X_missing = df.loc[missing_indices, [\"PecasFabricadas\", \"HorasProducao\"]]\n","X_missing_poly = poly_features.transform(X_missing)\n","predicted_values = model.predict(X_missing_poly)\n","\n","df.loc[missing_indices, \"PecasComDefeito\"] = predicted_values\n","\n","# HorasProducao\n","\n","poly_features = PolynomialFeatures(degree=2)\n","\n","X = df_filtered[[\"PecasFabricadas\", \"PecasComDefeito\"]]\n","X_poly = poly_features.fit_transform(X)\n","\n","y = df_filtered[\"HorasProducao\"]\n","\n","model = LinearRegression()\n","model.fit(X_poly, y)\n","\n","missing_indices = df[df[\"HorasProducao\"].isnull()].index\n","X_missing = df.loc[missing_indices, [\"PecasFabricadas\", \"PecasComDefeito\"]]\n","X_missing_poly = poly_features.transform(X_missing)\n","predicted_values = model.predict(X_missing_poly)\n","\n","df.loc[missing_indices, \"HorasProducao\"] = predicted_values\n","\n","\n","df\n"]},{"cell_type":"markdown","metadata":{"id":"diMP2i2nsv1O"},"source":["Observação: Nas colunas reconstruídas os valores que já existiam não foram alterados, apenas apareceram mais casas decimais nessas colunas. Em aula, observo a correção para identificar como poderia melhorar essa questão ou se não há problemas no que aconteceu."]}],"metadata":{"colab":{"provenance":[],"mount_file_id":"17N8L09PbcONiwBdz6cDo3OHiYyK-dBxb","authorship_tag":"ABX9TyNvthikwesrEcOwTEnHCuia"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}